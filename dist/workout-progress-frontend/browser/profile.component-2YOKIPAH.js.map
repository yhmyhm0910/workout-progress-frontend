{
  "version": 3,
  "sources": ["src/app/views/profile/profile.component.ts", "src/app/views/profile/profile.component.html"],
  "sourcesContent": ["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { lastValueFrom } from 'rxjs';\nimport { environment } from '../../../environment/environment';\nimport { GlobalsService } from '../../globals.service';\n\n@Component({\n  templateUrl: 'profile.component.html',\n  standalone: true,\n})\n\nexport class ProfileComponent implements OnInit {\n\n  readonly backend_apiUrl: string = environment.backend_apiUrl;\n  email: string = \"\";\n  name: string = \"\";\n  gender: string = \"\";\n\n  constructor(\n    private httpClient: HttpClient,\n    private globalsService: GlobalsService,\n  ) {\n    this.globalsService.userId$.subscribe(async (userId) => {\n      const fetchUserFromDB = async (userid: string): Promise<any> => {\n        const params = {\n          userid, // Define or fetch your access token here\n        };\n\n        try {\n          const response = await lastValueFrom(\n            this.httpClient.post(`${this.backend_apiUrl}/api/Database/SelectUserByUserID`, params, { withCredentials: true })\n          );\n          // console.log(response);\n          // console.log((response as any).result);\n          return (response as any).result; // Extract the result from the response\n        } catch (error) {\n          console.error('Error fetching standards: ', error);\n          throw error; // Re-throw the error for the caller to handle\n        }\n      };\n      if (userId) {\n        console.log(`User ID updated: ${userId}`);\n        const userDetails = await fetchUserFromDB(userId);\n        this.email = userDetails[0].email;\n        this.gender = userDetails[0].gender;\n        this.name = userDetails[0].name;\n        console.log(userDetails[0]);\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  };\n\n};\n", "<div>\n  <div>\n    Email: {{email}}\n  </div>\n  <div>\n    Name: {{name}}\n  </div>\n  <!-- <div>\n    Gender: {{gender}}\n  </div> -->\n</div>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAWM,IAAO,oBAAP,MAAO,kBAAgB;EAO3B,YACU,YACA,gBAA8B;AAD9B,SAAA,aAAA;AACA,SAAA,iBAAA;AAPD,SAAA,iBAAyB,YAAY;AAC9C,SAAA,QAAgB;AAChB,SAAA,OAAe;AACf,SAAA,SAAiB;AAMf,SAAK,eAAe,QAAQ,UAAU,CAAO,WAAU;AACrD,YAAM,kBAAkB,CAAO,WAAgC;AAC7D,cAAM,SAAS;UACb;;;AAGF,YAAI;AACF,gBAAM,WAAW,MAAM,cACrB,KAAK,WAAW,KAAK,GAAG,KAAK,cAAc,oCAAoC,QAAQ,EAAE,iBAAiB,KAAI,CAAE,CAAC;AAInH,iBAAQ,SAAiB;QAC3B,SAAS,OAAO;AACd,kBAAQ,MAAM,8BAA8B,KAAK;AACjD,gBAAM;QACR;MACF;AACA,UAAI,QAAQ;AACV,gBAAQ,IAAI,oBAAoB,MAAM,EAAE;AACxC,cAAM,cAAc,MAAM,gBAAgB,MAAM;AAChD,aAAK,QAAQ,YAAY,CAAC,EAAE;AAC5B,aAAK,SAAS,YAAY,CAAC,EAAE;AAC7B,aAAK,OAAO,YAAY,CAAC,EAAE;AAC3B,gBAAQ,IAAI,YAAY,CAAC,CAAC;MAC5B;IACF,EAAC;EACH;EAEA,WAAQ;EACR;;;mCAzCW,mBAAgB,4BAAA,UAAA,GAAA,4BAAA,cAAA,CAAA;AAAA;kFAAhB,mBAAgB,WAAA,CAAA,CAAA,cAAA,CAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,UAAA,SAAA,0BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACX7B,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,KAAA;AAED,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAM;;;AAJJ,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,YAAA,IAAA,OAAA,GAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,WAAA,IAAA,MAAA,GAAA;;;ADME,IAAO,mBAAP;;6EAAO,kBAAgB,EAAA,WAAA,mBAAA,CAAA;AAAA,GAAA;",
  "names": []
}
